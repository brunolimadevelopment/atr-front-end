@use "sass:math";

@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

$font-default      : 'Poppins', sans-serif;


@function rem($pxsize) { @return math.div($pxsize, 16)+rem; }

@mixin typography( $weight: $x, $size: $y, $font: $font-default) {
  font: $weight rem( $size ) $font;
}

$font-sizes: (
  // u = ultra
  uu-large   : 67px,
  u-large    : 48px,
  // h = hiper
  hhh-large  : 44px,
  hh-large   : 36px,
  h-large    : 32px,
  // x = extra
  xxx-large  : 30px,
  xx-large   : 27px,
  x-large    : 24px,
  large      : 20px,
  
  x-medium   : 18px,
  medium     : 16px, // Your font size base.
  // x = extra
  small      : 14px,
  x-small    : 12px,
  xx-small   : 10px
);


@function use-fz($size){
  @if map-has-key($font-sizes, $size) {
    @return map-get($font-sizes, $size);
  }
  
  @warn "Unfortunately, no value could be retrieved from `#{size}`. "
        + "Please make sure it is defined in `$font-sizes` map.";
  @return null;
}



@mixin make-fz($name: fz){
  @each $sufix, $value in $font-sizes {
    .#{$name}--#{$sufix}, 
    %#{$name}--#{$sufix} {
      font-size: use-fz($sufix);
    }
  }
}

/// Prefix for using in the mixin make-fz
///
/// * Necessary use '-'
/// Ex: $prefix : 'df-';
///
/// @type String
///
/// @example scss - Use
///   $prefix : 'df-';
///   @include make-fz($prefix + 'font');
///
/// @example css - CSS result
///   .df-font-x-large {
///     font-size: 24px;
///   }
$prefix : $prefix;

/// Using mixin make-fz
/// Generate classes and placeholders
///
/// @example scss and css - SCSS and CSS result
///   ....
///   %font-medium, 
///   .font-medium {
///     font-size: 16px;
///   }
///
///   %font-small {
///   .font-small {
///     font-size: 14px;
///   }
///   ....
@include make-fz($prefix + 'fz');



