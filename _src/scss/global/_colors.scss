// **
// Color Scheme 0.0.1
// Scheme from colors for the project
//
// From DEV Undergrond
// Participants: Jonas Sousa, Allef Silva
//
// We use two variables:
// $colors  - Map from colors default from the project.
// $palette - Tonality from the colors primarys, secondarys, etc.
// **

// Project colors
// Map from colors default from the project.

$colors: (
  black: #000000,
  blue: #003383,
  blueLigth: #0e6ed6,
  blueDarken: #001950,
  gray: #535454,
  grayDarken: #555555,
  orange: #ee651a,
  white: #ffffff,
	yellow: #ffb700,
  pink: #dd2f79,
  pinkSlim: #e91e63,
  purple: #8949ff,
  purpleSlim: #673AB7,
  // semantic colors
  // sucess, error, information
  btns:(
    primary:   #dd2f79,
    secondary: silver,
    gray:      #dbdbdb,
    graySlim:  #6b6b6b,
    white:     #fff,
    blue:      #19c9c9,
    green:     #00b45b,
    orange:    #ffa500,
    yellow:    #f5b038,
    pink:      #ed145b,
    black:     #000,
    red:       #e6383a
  ),

  titles:(
    gray: #454545,
    graySlim: #8f8f8f,
    grayLight: #9B9B9B,
    grayBold: #8B8B8B,
    white:  #fff,
    black:  #000,
    blue:   #00bba3,
    green:  #00b45b,
    orange: #ff6b12,
    yellow: #f5b038,
    gold:      #efb300,
    pink: #ee306a
  ),
	// semantic colors
	// sucess, error, information
	semantic:(
		sucess:  #12bc00,
		info:    #0a84ff,
		warning: #d76e00,
		error:   #d70022
	),
	// default colors
	// brand color, link, button, etc
	main:(
		primary:   #ff2b7c, // brand logo
		secondary: #20a29a, // brand logo sec
    third:     #00bba3, // brand logo third
		link:      #45a1ff
	)
);

// Color = cl
// Colors function
@function cl($color-name, $color-variant: null) {
  // color variant is optional
  @if ($color-variant != null) {
    @if map-has-key($colors, $color-name) {
      @return map-get(map-get($colors, $color-name), $color-variant);
    }
  } @else {
    @return map-get($colors, $color-name);
  }

  @warn "Unknown `#{$color-name}` in $palettes.";
  @return null;
}

// Construction
@mixin make-color($name: color){
  @each $theme in map-keys($colors) {
    @each $length in map-get($colors, $theme) {
      @if ( length($length) >= 2 ) {
        .#{$name}-#{$theme}-#{ nth($length, 1) },
        %#{$name}-#{$theme}-#{ nth($length, 1) }{
          color: nth($length, 2);
        }
      } @else {
        .#{$name}-#{$theme}
        %#{$name}-#{$theme}{
          color: #{ nth($length, 1) };
        }
      }
    }
  }
}

// @include make-color($prefix + 'color');